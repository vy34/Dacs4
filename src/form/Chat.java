/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package form;

import component.Chat_Body;
import component.Chat_Title;
import component.chat_Bottom;
import event.EventChat;
import event.PublicEvent;
import java.io.File;
import model.Model_Receive_Message;
import model.Model_Send_Message;
import model.Model_User_Account;
import model.Model_Voice_Receive;
import net.miginfocom.swing.MigLayout;

/**
 *
 * @author Admin
 */
public class Chat extends javax.swing.JPanel {

    private Chat_Title chatTitle;
    private Chat_Body chatBody;
    private chat_Bottom chatBottom;
    
    public Chat() {
        initComponents();
        init();
    }
    private void init(){
        setLayout(new MigLayout("fillx", "0[fill]0","0[]0[100%, fill]0[shrink 0]0"));
        chatTitle = new Chat_Title();
        chatBody = new Chat_Body();
        chatBottom = new chat_Bottom();
        PublicEvent.getInstance().addEventChat(new EventChat() {
            @Override
            public void sendMessage(Model_Send_Message data) {
                chatBody.addItemRight(data);
            }
            @Override
            public void sendMessage(Model_Voice_Receive data) {
                chatBody.addItemRight(data);
                }
            @Override
            public void receiveMessage(Model_Receive_Message data, File file) {
               if(chatTitle.getUser().getUserID() == data.getFromUserID()){
                  chatBody.addItemLeft(data, file, user);
                }
              }

            @Override
            public void receiveMessage(Model_Voice_Receive data) {
                if(chatTitle.getUser().getUserID() == data.getFromUserID()){
                  chatBody.addItemLeft(data, user);
                 }
                }
            
        });
        add(chatTitle, "wrap");
        add(chatBody, "wrap");
        add(chatBottom, "h ::50%");
      
        
        
    }
    public void setUser(Model_User_Account user){
        this.user = user;
        chatTitle.setUserName(user);
        chatBottom.setUser(user);
        chatBody.clearChat();
     }
    
    public void updateUser(Model_User_Account user){
        chatTitle.updateUser(user);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 586, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 448, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private Model_User_Account user;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
