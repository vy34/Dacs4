/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package component;

import event.PublicEvent;
import io.socket.client.Ack;
import java.awt.Color;
import java.io.ByteArrayOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLayeredPane;
import model.Model_File_Sender;
import model.Model_Package_Sender;
import model.Model_Voice_Receive;
import okio.Buffer;
import service.Service;

/**
 *
 * @author Admin
 */
public class popMix extends javax.swing.JPopupMenu {

    /**
     * @return the fromUserID
     */
    public int getFromUserID() {
        return fromUserID;
    }

    /**
     * @param fromUserID the fromUserID to set
     */
    public void setFromUserID(int fromUserID) {
        this.fromUserID = fromUserID;
    }

    /**
     * @return the bb
     */
    public ByteBuffer getBb() {
        return bb;
    }

    /**
     * @param bb the bb to set
     */
    public void setBb(ByteBuffer bb) {
        this.bb = bb;
    }

    /**
     * @return the fileSize
     */
    public long getFileSize() {
        return fileSize;
    }

    /**
     * @param fileSize the fileSize to set
     */
    public void setFileSize(long fileSize) {
        this.fileSize = fileSize;
    }

    /**
     * @param sound the sound to set
     */
    public void setSound(ByteArrayOutputStream sound) {
        this.sound = sound;
    }

    /**
     * @param time the time to set
     */
    public void setTime(int time) {
        this.time = time;
    }

    /**
     * @return the DataByte
     */
    public byte[] getDataByte() {
        return DataByte;
    }

    /**
     * @param DataByte the DataByte to set
     */
    public void setDataByte(byte[] DataByte) {
        this.DataByte = DataByte;
    }

    /**
     * @return the toUserID
     */
    public int getToUserID() {
        return toUserID;
    }

    /**
     * @param toUserID the toUserID to set
     */
    public void setToUserID(int toUserID) {
        this.toUserID = toUserID;
    }

    /**
     * Creates new form popMix
     */
    public popMix() {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmdMix = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));
        setAlignmentY(0.0F);
        setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        setBorderPainted(false);

        cmdMix.setBackground(new java.awt.Color(219, 10, 91));
        cmdMix.setFont(new java.awt.Font("JetBrains Mono", 1, 18)); // NOI18N
        cmdMix.setForeground(new java.awt.Color(255, 255, 255));
        cmdMix.setText("Giữ chuột để bắt đầu");
        cmdMix.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cmdMix.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cmdMix.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmdMixMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmdMixMouseReleased(evt);
            }
        });
        cmdMix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdMixActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmdMix, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmdMix, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmdMixMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdMixMousePressed
        
        cmdMix.setBackground(new Color(102, 51, 153));
        cmdMix.setText("Đang ghi âm...");
        Service.getInstance().getRecoder().captureAudio();
    }//GEN-LAST:event_cmdMixMousePressed

    private void cmdMixMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdMixMouseReleased
        // TODO add your handling code here:
        cmdMix.setBackground(new Color(29, 118, 206));
        cmdMix.setText("Bắt đầu");
        this.setDataByte(Service.getInstance().getRecoder().stop().toByteArray());
        System.out.println("độ dài data mic"+DataByte.length);
        this.setTime(Service.getInstance().getRecoder().getTime()); 
        PublicEvent.getInstance().getEventChat().sendMessage(new Model_Voice_Receive(toUserID, DataByte, getDurationString(time) + "!" + time)); //hiển thị lên client gửi
        this.setBb(ByteBuffer.wrap(DataByte));
        this.setFileSize(bb.limit());
        try {
            sendSound();
        } catch (IOException ex) {
            Logger.getLogger(popMix.class.getName()).log(Level.SEVERE, null, ex);
        }
        setVisible(false);
    }//GEN-LAST:event_cmdMixMouseReleased

    private void sendSound() throws IOException{
        Model_Package_Sender data = new Model_Package_Sender();
        data.setFileID(getToUserID());
        data.setFromUserID(Service.getInstance().getUser().getUserID());
        data.setFileName(getDurationString(time) + "!" + time);
        byte[] bytes = readDataVoice();
        if (bytes != null){
           data.setData(bytes);
           data.setFinish(false);
        }else{
           data.setFinish(true);
           
        }   
        //gửi đến client nhận
        Service.getInstance().getClient().emit("send_voice", data.toJsonObject(), new Ack() {
            @Override
            public void call(Object... os) {
                if(os.length > 0){
                    boolean act = (boolean) os[0];
                    if (act) {
                        try {
                            if(!data.isFinish()){
//                                 if(event != null){
//                                    event.onSending(getPercentage());
//                                 }
                               sendSound();   
                            }else{
                              //send voice finish
                                 System.out.println("send voice finish");
//                                if(event != null){
//                                    event.onFinish();
//                                 }
                            }
                        } catch (IOException e) {
                           e.printStackTrace();
                        }
                    }
                
                }
                
            }
        });
        
    }
    
    public synchronized byte[]readDataVoice(){
        if(bb.position() != fileSize){
            int max = 1500;
            long length = bb.position() + max >= fileSize ? fileSize - bb.position() : max;
            byte[] someByte = new byte[(int) length];
            splitByteArray(someByte, bb);
            System.out.println(someByte.length);
            return someByte;
        }else{
            return null;
        }
         
    }
    
    public static void splitByteArray(byte[] data, ByteBuffer bb) {
        bb.get(data);
    }
    
    
//    private static String byteArrayToHexString(byte[] b){
//        StringBuffer sb = new StringBuffer(b.length * 2);
//        for (int i = 0; i < b.length; i++){
//            int v = b[i] & 0xff;
//            if (v < 16) {
//                sb.append('0');
//            }
//            sb.append(Integer.toHexString(v));
//        }
//        return sb.toString().toUpperCase();
//    }
//    
//     private static byte[] hexStringToByteArray(String s) {
//        byte[] b = new byte[s.length() / 2];
//        for (int i = 0; i < b.length; i++){
//            int index = i * 2;
//            int v = Integer.parseInt(s.substring(index, index + 2), 16);
//            b[i] = (byte)v;
//        }
//        return b;
//    }
    
    
    private void cmdMixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdMixActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdMixActionPerformed
    private String getDurationString(int seconds) {
        int minutes = (seconds % 3600) / 60;
        seconds = seconds % 60;
        return oneDigitString(minutes) + ":" + twoDigitString(seconds);
    }
    private String oneDigitString(int number) {
        if (number == 0) {
            return "0";
        }
        if (number / 10 == 0) {
            return "" + number;
        }
        return String.valueOf(number);
    }
    private String twoDigitString(int number) {
        if (number == 0) {
            return "00";
        }
        if (number / 10 == 0) {
            return "0" + number;
        }
        return String.valueOf(number);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdMix;
    // End of variables declaration//GEN-END:variables
    private int toUserID;
    private int fromUserID;
    private byte[] DataByte;
    private ByteArrayOutputStream sound;
    private int time;
    private ByteBuffer bb;
    private long fileSize; 
}
